import {
  isJSON,
  parse,
  stringify
} from "./chunk-LJHOL2VS.js";
import "./chunk-66J6WHKG.js";
import "./chunk-AVFDKZG3.js";
import "./chunk-RDC7JMPA.js";
import "./chunk-LSULALKB.js";
import "./chunk-DS5USQZ2.js";
import "./chunk-3QN2FKAO.js";
import "./chunk-ZDUTL6BQ.js";
import "./chunk-KAUUABWR.js";
import "./chunk-KJKL4KWM.js";
import "./chunk-X7ZFCBLV.js";
import "./chunk-4WU4C7UM.js";
import "./chunk-YZXGWXAJ.js";
import "./chunk-CNN6HZCS.js";
import {
  Channel
} from "./chunk-MK3JGFUV.js";
import "./chunk-DEIQAVMK.js";
import "./chunk-3SF4N25N.js";
import "./chunk-RLCE3XU7.js";
import "./chunk-WKKBZVCK.js";
import "./chunk-B73QBJOU.js";
import "./chunk-RTGR44VM.js";
import "./chunk-ATJAP3U7.js";
import {
  logger
} from "./chunk-J2GB62OG.js";
import "./chunk-F5YULRCK.js";
import "./chunk-427VCC5Z.js";
import {
  require_window
} from "./chunk-JZT4ZQKT.js";
import {
  __toESM
} from "./chunk-OZI5HTJH.js";

// ../../node_modules/@storybook/channel-websocket/dist/esm/index.js
var import_global = __toESM(require_window());
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var WebSocket = import_global.default.WebSocket;
var WebsocketTransport = function() {
  function WebsocketTransport2(_ref) {
    var url = _ref.url, onError = _ref.onError;
    _classCallCheck(this, WebsocketTransport2);
    this.socket = void 0;
    this.handler = void 0;
    this.buffer = [];
    this.isReady = false;
    this.connect(url, onError);
  }
  _createClass(WebsocketTransport2, [{
    key: "setHandler",
    value: function setHandler(handler) {
      this.handler = handler;
    }
  }, {
    key: "send",
    value: function send(event) {
      if (!this.isReady) {
        this.sendLater(event);
      } else {
        this.sendNow(event);
      }
    }
  }, {
    key: "sendLater",
    value: function sendLater(event) {
      this.buffer.push(event);
    }
  }, {
    key: "sendNow",
    value: function sendNow(event) {
      var data = stringify(event, {
        maxDepth: 15,
        allowFunction: true
      });
      this.socket.send(data);
    }
  }, {
    key: "flush",
    value: function flush() {
      var _this = this;
      var buffer = this.buffer;
      this.buffer = [];
      buffer.forEach(function(event) {
        return _this.send(event);
      });
    }
  }, {
    key: "connect",
    value: function connect(url, onError) {
      var _this2 = this;
      this.socket = new WebSocket(url);
      this.socket.onopen = function() {
        _this2.isReady = true;
        _this2.flush();
      };
      this.socket.onmessage = function(_ref2) {
        var data = _ref2.data;
        var event = typeof data === "string" && isJSON(data) ? parse(data) : data;
        _this2.handler(event);
      };
      this.socket.onerror = function(e) {
        if (onError) {
          onError(e);
        }
      };
    }
  }]);
  return WebsocketTransport2;
}();
function createChannel(_ref3) {
  var url = _ref3.url, _ref3$async = _ref3.async, async = _ref3$async === void 0 ? false : _ref3$async, _ref3$onError = _ref3.onError, onError = _ref3$onError === void 0 ? function(err) {
    return logger.warn(err);
  } : _ref3$onError;
  var transport = new WebsocketTransport({
    url,
    onError
  });
  return new Channel({
    transport,
    async
  });
}
export {
  WebsocketTransport,
  createChannel as default
};
//# sourceMappingURL=@storybook_channel-websocket.js.map
