{
  "version": 3,
  "sources": ["../../../../../node_modules/uuid-browser/lib/rng-browser.js", "../../../../../node_modules/uuid-browser/lib/bytesToUuid.js", "../../../../../node_modules/uuid-browser/v4.js"],
  "sourcesContent": ["// Unique ID creation requires a high quality random # generator.  In the\r\n// browser this is a little complicated due to unknown quality of Math.random()\r\n// and inconsistent support for the `crypto` API.  We do the best we can via\r\n// feature-detection\r\nvar rng;\r\n\r\nvar crypto = typeof global !== 'undefined' && (global.crypto || global.msCrypto); // for IE 11\r\nif (crypto && crypto.getRandomValues) {\r\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\r\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\r\n  rng = function whatwgRNG() {\r\n    crypto.getRandomValues(rnds8);\r\n    return rnds8;\r\n  };\r\n}\r\n\r\nif (!rng) {\r\n  // Math.random()-based (RNG)\r\n  //\r\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\r\n  // quality.\r\n  var rnds = new Array(16);\r\n  rng = function() {\r\n    for (var i = 0, r; i < 16; i++) {\r\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\r\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\r\n    }\r\n\r\n    return rnds;\r\n  };\r\n}\r\n\r\nmodule.exports = rng;\r\n", "/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\nvar byteToHex = [];\r\nfor (var i = 0; i < 256; ++i) {\r\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\r\n}\r\n\r\nfunction bytesToUuid(buf, offset) {\r\n  var i = offset || 0;\r\n  var bth = byteToHex;\r\n  return bth[buf[i++]] + bth[buf[i++]] +\r\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\r\n          bth[buf[i++]] + bth[buf[i++]] +\r\n          bth[buf[i++]] + bth[buf[i++]] +\r\n          bth[buf[i++]] + bth[buf[i++]];\r\n}\r\n\r\nmodule.exports = bytesToUuid;\r\n", "var rng = require('./lib/rng-browser');\r\nvar bytesToUuid = require('./lib/bytesToUuid');\r\n\r\nfunction v4(options, buf, offset) {\r\n  var i = buf && offset || 0;\r\n\r\n  if (typeof(options) == 'string') {\r\n    buf = options == 'binary' ? new Array(16) : null;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n\r\n  var rnds = options.random || (options.rng || rng)();\r\n\r\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\r\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\r\n\r\n  // Copy bytes to buffer, if provided\r\n  if (buf) {\r\n    for (var ii = 0; ii < 16; ++ii) {\r\n      buf[i + ii] = rnds[ii];\r\n    }\r\n  }\r\n\r\n  return buf || bytesToUuid(rnds);\r\n}\r\n\r\nmodule.exports = v4;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAIA,QAAI;AAEJ,QAAI,SAAS,OAAO,WAAW,gBAAgB,OAAO,UAAU,OAAO;AACvE,QAAI,UAAU,OAAO,iBAAiB;AAEhC,cAAQ,IAAI,WAAW,EAAE;AAC7B,YAAM,SAAS,YAAY;AACzB,eAAO,gBAAgB,KAAK;AAC5B,eAAO;AAAA,MACT;AAAA,IACF;AALM;AAON,QAAI,CAAC,KAAK;AAKJ,aAAO,IAAI,MAAM,EAAE;AACvB,YAAM,WAAW;AACf,iBAAS,IAAI,GAAG,GAAG,IAAI,IAAI,KAAK;AAC9B,eAAK,IAAI,OAAU;AAAG,gBAAI,KAAK,OAAO,IAAI;AAC1C,eAAK,CAAC,IAAI,QAAQ,IAAI,MAAS,KAAK;AAAA,QACtC;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AATM;AAWN,WAAO,UAAU;AAAA;AAAA;;;AChCjB;AAAA;AAIA,QAAI,YAAY,CAAC;AACjB,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,gBAAU,CAAC,KAAK,IAAI,KAAO,SAAS,EAAE,EAAE,OAAO,CAAC;AAAA,IAClD;AAFS;AAIT,aAAS,YAAY,KAAK,QAAQ;AAChC,UAAIA,KAAI,UAAU;AAClB,UAAI,MAAM;AACV,aAAO,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAC3B,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAAI,MAChC,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAAI,MAChC,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAAI,MAChC,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAAI,MAChC,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAC5B,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC,IAC5B,IAAI,IAAIA,IAAG,CAAC,IAAI,IAAI,IAAIA,IAAG,CAAC;AAAA,IACtC;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACtBjB;AAAA;AAAA,QAAI,MAAM;AACV,QAAI,cAAc;AAElB,aAAS,GAAG,SAAS,KAAK,QAAQ;AAChC,UAAI,IAAI,OAAO,UAAU;AAEzB,UAAI,OAAO,WAAY,UAAU;AAC/B,cAAM,WAAW,WAAW,IAAI,MAAM,EAAE,IAAI;AAC5C,kBAAU;AAAA,MACZ;AACA,gBAAU,WAAW,CAAC;AAEtB,UAAI,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK;AAGlD,WAAK,CAAC,IAAK,KAAK,CAAC,IAAI,KAAQ;AAC7B,WAAK,CAAC,IAAK,KAAK,CAAC,IAAI,KAAQ;AAG7B,UAAI,KAAK;AACP,iBAAS,KAAK,GAAG,KAAK,IAAI,EAAE,IAAI;AAC9B,cAAI,IAAI,EAAE,IAAI,KAAK,EAAE;AAAA,QACvB;AAAA,MACF;AAEA,aAAO,OAAO,YAAY,IAAI;AAAA,IAChC;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": ["i"]
}
