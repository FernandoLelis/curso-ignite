{
  "version": 3,
  "sources": ["../../../../../node_modules/core-js/internals/same-value.js", "../../../../../node_modules/core-js/modules/es.string.search.js"],
  "sourcesContent": ["// `SameValue` abstract operation\r\n// https://tc39.es/ecma262/#sec-samevalue\r\n// eslint-disable-next-line es/no-object-is -- safe\r\nmodule.exports = Object.is || function is(x, y) {\r\n  // eslint-disable-next-line no-self-compare -- NaN check\r\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\r\n};\r\n", "'use strict';\r\nvar call = require('../internals/function-call');\r\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\r\nvar anObject = require('../internals/an-object');\r\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar sameValue = require('../internals/same-value');\r\nvar toString = require('../internals/to-string');\r\nvar getMethod = require('../internals/get-method');\r\nvar regExpExec = require('../internals/regexp-exec-abstract');\r\n\r\n// @@search logic\r\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.search` method\r\n    // https://tc39.es/ecma262/#sec-string.prototype.search\r\n    function search(regexp) {\r\n      var O = requireObjectCoercible(this);\r\n      var searcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, SEARCH);\r\n      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\r\n    },\r\n    // `RegExp.prototype[@@search]` method\r\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\r\n    function (string) {\r\n      var rx = anObject(this);\r\n      var S = toString(string);\r\n      var res = maybeCallNative(nativeSearch, rx, S);\r\n\r\n      if (res.done) return res.value;\r\n\r\n      var previousLastIndex = rx.lastIndex;\r\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\r\n      var result = regExpExec(rx, S);\r\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\r\n      return result === null ? -1 : result.index;\r\n    }\r\n  ];\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAGA,WAAO,UAAU,OAAO,MAAM,SAAS,GAAG,GAAG,GAAG;AAE9C,aAAO,MAAM,IAAI,MAAM,KAAK,IAAI,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK;AAAA,IAC/D;AAAA;AAAA;;;ACLA,IAAI,OAAO;AACX,IAAI,gCAAgC;AACpC,IAAI,WAAW;AACf,IAAI,oBAAoB;AACxB,IAAI,yBAAyB;AAC7B,IAAI,YAAY;AAChB,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,aAAa;AAGjB,8BAA8B,UAAU,SAAU,QAAQ,cAAc,iBAAiB;AACvF,SAAO;AAAA;AAAA;AAAA,IAGL,SAAS,OAAO,QAAQ;AACtB,UAAI,IAAI,uBAAuB,IAAI;AACnC,UAAI,WAAW,kBAAkB,MAAM,IAAI,SAAY,UAAU,QAAQ,MAAM;AAC/E,aAAO,WAAW,KAAK,UAAU,QAAQ,CAAC,IAAI,IAAI,OAAO,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAAA,IACtF;AAAA;AAAA;AAAA,IAGA,SAAU,QAAQ;AAChB,UAAI,KAAK,SAAS,IAAI;AACtB,UAAI,IAAI,SAAS,MAAM;AACvB,UAAI,MAAM,gBAAgB,cAAc,IAAI,CAAC;AAE7C,UAAI,IAAI;AAAM,eAAO,IAAI;AAEzB,UAAI,oBAAoB,GAAG;AAC3B,UAAI,CAAC,UAAU,mBAAmB,CAAC;AAAG,WAAG,YAAY;AACrD,UAAI,SAAS,WAAW,IAAI,CAAC;AAC7B,UAAI,CAAC,UAAU,GAAG,WAAW,iBAAiB;AAAG,WAAG,YAAY;AAChE,aAAO,WAAW,OAAO,KAAK,OAAO;AAAA,IACvC;AAAA,EACF;AACF,CAAC;",
  "names": []
}
