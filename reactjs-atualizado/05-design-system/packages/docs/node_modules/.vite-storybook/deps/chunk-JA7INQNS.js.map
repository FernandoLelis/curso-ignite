{
  "version": 3,
  "sources": ["../../../../../node_modules/core-js/internals/string-repeat.js", "../../../../../node_modules/core-js/modules/es.number.to-fixed.js"],
  "sourcesContent": ["'use strict';\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar toString = require('../internals/to-string');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\n\r\nvar $RangeError = RangeError;\r\n\r\n// `String.prototype.repeat` method implementation\r\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\r\nmodule.exports = function repeat(count) {\r\n  var str = toString(requireObjectCoercible(this));\r\n  var result = '';\r\n  var n = toIntegerOrInfinity(count);\r\n  if (n < 0 || n == Infinity) throw $RangeError('Wrong number of repetitions');\r\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\r\n  return result;\r\n};\r\n", "'use strict';\r\nvar $ = require('../internals/export');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar thisNumberValue = require('../internals/this-number-value');\r\nvar $repeat = require('../internals/string-repeat');\r\nvar fails = require('../internals/fails');\r\n\r\nvar $RangeError = RangeError;\r\nvar $String = String;\r\nvar floor = Math.floor;\r\nvar repeat = uncurryThis($repeat);\r\nvar stringSlice = uncurryThis(''.slice);\r\nvar nativeToFixed = uncurryThis(1.0.toFixed);\r\n\r\nvar pow = function (x, n, acc) {\r\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\r\n};\r\n\r\nvar log = function (x) {\r\n  var n = 0;\r\n  var x2 = x;\r\n  while (x2 >= 4096) {\r\n    n += 12;\r\n    x2 /= 4096;\r\n  }\r\n  while (x2 >= 2) {\r\n    n += 1;\r\n    x2 /= 2;\r\n  } return n;\r\n};\r\n\r\nvar multiply = function (data, n, c) {\r\n  var index = -1;\r\n  var c2 = c;\r\n  while (++index < 6) {\r\n    c2 += n * data[index];\r\n    data[index] = c2 % 1e7;\r\n    c2 = floor(c2 / 1e7);\r\n  }\r\n};\r\n\r\nvar divide = function (data, n) {\r\n  var index = 6;\r\n  var c = 0;\r\n  while (--index >= 0) {\r\n    c += data[index];\r\n    data[index] = floor(c / n);\r\n    c = (c % n) * 1e7;\r\n  }\r\n};\r\n\r\nvar dataToString = function (data) {\r\n  var index = 6;\r\n  var s = '';\r\n  while (--index >= 0) {\r\n    if (s !== '' || index === 0 || data[index] !== 0) {\r\n      var t = $String(data[index]);\r\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\r\n    }\r\n  } return s;\r\n};\r\n\r\nvar FORCED = fails(function () {\r\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\r\n    nativeToFixed(0.9, 0) !== '1' ||\r\n    nativeToFixed(1.255, 2) !== '1.25' ||\r\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\r\n}) || !fails(function () {\r\n  // V8 ~ Android 4.3-\r\n  nativeToFixed({});\r\n});\r\n\r\n// `Number.prototype.toFixed` method\r\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\r\n$({ target: 'Number', proto: true, forced: FORCED }, {\r\n  toFixed: function toFixed(fractionDigits) {\r\n    var number = thisNumberValue(this);\r\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\r\n    var data = [0, 0, 0, 0, 0, 0];\r\n    var sign = '';\r\n    var result = '0';\r\n    var e, z, j, k;\r\n\r\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\r\n    if (fractDigits < 0 || fractDigits > 20) throw $RangeError('Incorrect fraction digits');\r\n    // eslint-disable-next-line no-self-compare -- NaN check\r\n    if (number != number) return 'NaN';\r\n    if (number <= -1e21 || number >= 1e21) return $String(number);\r\n    if (number < 0) {\r\n      sign = '-';\r\n      number = -number;\r\n    }\r\n    if (number > 1e-21) {\r\n      e = log(number * pow(2, 69, 1)) - 69;\r\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\r\n      z *= 0x10000000000000;\r\n      e = 52 - e;\r\n      if (e > 0) {\r\n        multiply(data, 0, z);\r\n        j = fractDigits;\r\n        while (j >= 7) {\r\n          multiply(data, 1e7, 0);\r\n          j -= 7;\r\n        }\r\n        multiply(data, pow(10, j, 1), 0);\r\n        j = e - 1;\r\n        while (j >= 23) {\r\n          divide(data, 1 << 23);\r\n          j -= 23;\r\n        }\r\n        divide(data, 1 << j);\r\n        multiply(data, 1, 1);\r\n        divide(data, 2);\r\n        result = dataToString(data);\r\n      } else {\r\n        multiply(data, 0, z);\r\n        multiply(data, 1 << -e, 0);\r\n        result = dataToString(data) + repeat('0', fractDigits);\r\n      }\r\n    }\r\n    if (fractDigits > 0) {\r\n      k = result.length;\r\n      result = sign + (k <= fractDigits\r\n        ? '0.' + repeat('0', fractDigits - k) + result\r\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\r\n    } else {\r\n      result = sign + result;\r\n    } return result;\r\n  }\r\n});\r\n"],
  "mappings": "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",
  "names": ["toIntegerOrInfinity", "$RangeError", "repeat"]
}
